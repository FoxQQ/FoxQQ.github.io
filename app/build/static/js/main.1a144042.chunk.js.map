{"version":3,"sources":["components/LineSeriesComponent.jsx","components/HorizontalBarSeriesComponent.jsx","components/VerticalBarSeriesComponent.jsx","components/RadialChartComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["LineSeriesComponent","state","displayMouseOver","chartProps","onNearestX","value","index","setState","className","width","height","onMouseLeave","data","this","props","JSON","stringify","Component","HorizontalBarSeriesComponent","onNearestXY","yType","VerticalBarSeriesComponent","RadialChartComponent","angle","radius","label","subLabel","innerRadius","labelsAboveChildren","i","showLabels","x","y","links","source","target","nodes","name","data2","Math","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a144042.chunk.js","sourcesContent":["import { Component, Fragment } from 'react';\nimport { XYPlot, LineSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis } from 'react-vis';\n\nexport default class LineSeriesComponent extends Component{\n    state = {\n        displayMouseOver: false\n    }\n\n    render() {\n\n        const chartProps = {\n            onNearestX: (value, { index }) => this.setState({ displayMouseOver: value })\n        }\n\n        return (\n            <Fragment>\n                <div className=\"SeriesContainer\"> \n                    <XYPlot width={300} height={300} onMouseLeave={() => this.setState({ displayMouseOver: false })} >\n                        <VerticalGridLines />\n                        <HorizontalGridLines />\n                        <LineSeries data={this.props.data} {...chartProps} />\n                        <XAxis />\n                        <YAxis />\n                    </XYPlot>\n                    {this.state.displayMouseOver ? <p className=\"DisplayMouseOver\">{JSON.stringify(this.state.displayMouseOver)}</p> : ''}\n                </div>\n            </Fragment>\n        );\n    }\n} ","import { Component, Fragment } from 'react';\nimport { XYPlot, HorizontalBarSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis } from 'react-vis';\n\nexport default class HorizontalBarSeriesComponent extends Component{\n    state = {\n        displayMouseOver: false\n    }\n\n    render() {\n\n        const chartProps = {\n            onNearestXY: (value, { index }) => this.setState({ displayMouseOver: value })\n        }\n\n        return (\n            <Fragment>\n                <div className=\"SeriesContainer\"> \n                    <XYPlot width={300} height={300}  yType=\"ordinal\" onMouseLeave={() => this.setState({ displayMouseOver: false })} >\n                        <VerticalGridLines />\n                        <HorizontalGridLines />\n                        <HorizontalBarSeries data={this.props.data} {...chartProps} />\n                        <XAxis />\n                        <YAxis />\n                    </XYPlot>\n                    {this.state.displayMouseOver ? <p className=\"DisplayMouseOver\">{JSON.stringify(this.state.displayMouseOver)}</p> : ''}\n                </div>\n            </Fragment>\n        );\n    }\n} ","import { Component, Fragment } from 'react';\nimport { XYPlot, VerticalBarSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis } from 'react-vis';\n\nexport default class VerticalBarSeriesComponent extends Component{\n    state = {\n        displayMouseOver: false\n    }\n\n    render() {\n\n        const chartProps = {\n            onNearestX: (value, { index }) => this.setState({ displayMouseOver: value })\n        }\n\n        return (\n            <Fragment>\n                <div className=\"SeriesContainer\"> \n                    <XYPlot width={300} height={300} onMouseLeave={() => this.setState({ displayMouseOver: false })} >\n                        <VerticalGridLines />\n                        <HorizontalGridLines />\n                        <VerticalBarSeries data={this.props.data} {...chartProps} />\n                        <XAxis />\n                        <YAxis />\n                    </XYPlot>\n                    {this.state.displayMouseOver ? <p className=\"DisplayMouseOver\">{JSON.stringify(this.state.displayMouseOver)}</p> : ''}\n                </div>\n            </Fragment>\n        );\n    }\n} ","import { Component, Fragment } from 'react';\nimport { RadialChart } from 'react-vis';\n\nexport default class RadialChartComponent extends Component{\n    state = {\n        displayMouseOver: false\n    }\n\n    render() {\n        const myData = [ {angle: 1, radius: 10}, {angle: 2, label: 'Super Custom label', subLabel: 'With annotation', radius: 20}, {angle: 5, radius: 5, label: 'Alt Label'}, {angle: 3, radius: 14}, {angle: 5, radius: 12, subLabel: 'Sub Label only', className: 'custom-class'} ];\n        const nodes = [{name: 'a'}, {name: 'b'}, {name: 'c'}];\n        \n\n        return (\n            <Fragment>\n                <div className=\"SeriesContainer\"> \n                    <RadialChart data={myData}  \n                        width={300} \n                        height={300} \n                        innerRadius={10}\n                        radius={16} \n                        labelsAboveChildren={false}\n                        label={(i) => i.label}\n                        // subLabel={(i) => i.subLabel} \n                        showLabels={true} />\n               \n                    {this.state.displayMouseOver ? <p className=\"DisplayMouseOver\">{JSON.stringify(this.state.displayMouseOver)}</p> : ''}\n                </div>\n            </Fragment>\n        );\n    }\n} ","import { Fragment } from 'react';\nimport './App.css';\nimport LineSeriesComponent from './components/LineSeriesComponent';\nimport HorizontalBarSeriesComponent from './components/HorizontalBarSeriesComponent';\nimport VerticalBarSeriesComponent from './components/VerticalBarSeriesComponent';\nimport RadialChartComponent from './components/RadialChartComponent';\nimport { Sankey } from 'react-vis';\n\nconst data = [\n  {x: 0, y: 8},\n  {x: 1, y: 5},\n  {x: 2, y: 4},\n  {x: 3, y: 9},\n  {x: 4, y: 1},\n  {x: 5, y: 7},\n  {x: 6, y: 6},\n  {x: 7, y: 3},\n  {x: 8, y: 2},\n  {x: 9, y: 0}\n];\n\nconst links = [\n  {source: 0, target: 1, value: 10},\n  {source: 0, target: 2, value: 20},\n  {source: 1, target: 2, value: 20}\n  ];\n\nconst nodes = [{name: 'a'}, {name: 'b'}, {name: 'c'}];\nconst data2 = [{y: 'winter', x: Math.log(10)}, {y: 'spring', x: Math.log(100)}, {y: 'summer', x: Math.log(10000)}, {y: 'fall', x: Math.log(10)}];\nfunction App() {\n  return (\n    <Fragment>\n      {/* <link rel=\"stylesheet\" href=\"https://unpkg.com/react-vis/dist/style.css\"></link> */}\n      <div className=\"App\">\n        <LineSeriesComponent data={data} />\n        <HorizontalBarSeriesComponent data={data2} />\n        <VerticalBarSeriesComponent data={data} />\n        <RadialChartComponent data={data} />\n        <Sankey\n        nodes={nodes}\n        links={links}\n        width={200}\n        height={200}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}